Moddel:  BlazeFaceModel {
  blazeFaceModel: GraphModel {
    modelUrl: 'https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1/model.json?tfjs-format=file',
    loadOptions: { fromTFHub: true },
    version: '134.12',
    io: [Object: null prototype] {
      CompositeArrayBuffer: [Function],
      browserFiles: [Function: browserFiles],
      browserHTTPRequest: [Function: browserHTTPRequest],
      concatenateArrayBuffers: [Function: concatenateArrayBuffers],
      copyModel: [Function: copyModel],
      decodeWeights: [Function: decodeWeights],
      decodeWeightsStream: [Function: decodeWeightsStream],
      encodeWeights: [Function: encodeWeights],
      fromMemory: [Function: fromMemory],
      fromMemorySync: [Function: fromMemorySync],
      getLoadHandlers: [Function: getLoadHandlers],
      getModelArtifactsForJSON: [Function: getModelArtifactsForJSON],
      getModelArtifactsForJSONSync: [Function: getModelArtifactsForJSONSync],
      getModelArtifactsInfoForJSON: [Function: getModelArtifactsInfoForJSON],
      getSaveHandlers: [Function: getSaveHandlers],
      getWeightSpecs: [Function: getWeightSpecs],
      http: [Function: http],
      isHTTPScheme: [Function: isHTTPScheme],
      listModels: [Function: listModels],
      loadWeights: [Function: loadWeights],
      moveModel: [Function: moveModel],
      registerLoadRouter: [Function: registerLoadRouter],
      registerSaveRouter: [Function: registerSaveRouter],
      removeModel: [Function: removeModel],
      weightsLoaderFactory: [Function: weightsLoaderFactory],
      withSaveHandler: [Function: withSaveHandler],
      withSaveHandlerSync: [Function: withSaveHandlerSync]
    },
    resourceManager: ResourceManager { hashTableNameToHandle: {}, hashTableMap: {} },
    handler: HTTPRequest {
      DEFAULT_METHOD: 'POST',
      weightPathPrefix: undefined,
      weightUrlConverter: undefined,
      fetch: [Function (anonymous)],
      path: 'https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1/model.json?tfjs-format=file',
      requestInit: {},
      loadOptions: [Object]
    },
    artifacts: {
      modelTopology: [Object],
      format: 'graph-model',
      generatedBy: '1.15.0',
      convertedBy: 'TensorFlow.js Converter v1.3.2',
      weightSpecs: [Array],
      weightData: [Array],
      userDefinedMetadata: [Object]
    },
    signature: { inputs: [Object], outputs: [Object] },
    executor: GraphExecutor {
      graph: [Object],
      parent: undefined,
      compiledMap: [Map],
      parseNodeNameCache: [Map],
      _weightMap: [Object],
      SEPARATOR: ',',
      _functions: {},
      _functionExecutorMap: {},
      keepIntermediateTensors: false,
      _outputs: [Array],
      _inputs: [Array],
      _initNodes: undefined,
      _signature: [Object],
      _weightIds: [Array],
      _resourceManager: [ResourceManager]
    },
    resourceIdToCapturedInput: {}
  },
  width: 128,
  height: 128,
  maxFaces: 10,
  anchorsData: [
    [ 4, 4 ],    [ 4, 4 ],    [ 12, 4 ],   [ 12, 4 ],   [ 20, 4 ],
    [ 20, 4 ],   [ 28, 4 ],   [ 28, 4 ],   [ 36, 4 ],   [ 36, 4 ],
    [ 44, 4 ],   [ 44, 4 ],   [ 52, 4 ],   [ 52, 4 ],   [ 60, 4 ],
    [ 60, 4 ],   [ 68, 4 ],   [ 68, 4 ],   [ 76, 4 ],   [ 76, 4 ],
    [ 84, 4 ],   [ 84, 4 ],   [ 92, 4 ],   [ 92, 4 ],   [ 100, 4 ],
    [ 100, 4 ],  [ 108, 4 ],  [ 108, 4 ],  [ 116, 4 ],  [ 116, 4 ],
    [ 124, 4 ],  [ 124, 4 ],  [ 4, 12 ],   [ 4, 12 ],   [ 12, 12 ],
    [ 12, 12 ],  [ 20, 12 ],  [ 20, 12 ],  [ 28, 12 ],  [ 28, 12 ],
    [ 36, 12 ],  [ 36, 12 ],  [ 44, 12 ],  [ 44, 12 ],  [ 52, 12 ],
    [ 52, 12 ],  [ 60, 12 ],  [ 60, 12 ],  [ 68, 12 ],  [ 68, 12 ],
    [ 76, 12 ],  [ 76, 12 ],  [ 84, 12 ],  [ 84, 12 ],  [ 92, 12 ],
    [ 92, 12 ],  [ 100, 12 ], [ 100, 12 ], [ 108, 12 ], [ 108, 12 ],
    [ 116, 12 ], [ 116, 12 ], [ 124, 12 ], [ 124, 12 ], [ 4, 20 ],
    [ 4, 20 ],   [ 12, 20 ],  [ 12, 20 ],  [ 20, 20 ],  [ 20, 20 ],
    [ 28, 20 ],  [ 28, 20 ],  [ 36, 20 ],  [ 36, 20 ],  [ 44, 20 ],
    [ 44, 20 ],  [ 52, 20 ],  [ 52, 20 ],  [ 60, 20 ],  [ 60, 20 ],
    [ 68, 20 ],  [ 68, 20 ],  [ 76, 20 ],  [ 76, 20 ],  [ 84, 20 ],
    [ 84, 20 ],  [ 92, 20 ],  [ 92, 20 ],  [ 100, 20 ], [ 100, 20 ],
    [ 108, 20 ], [ 108, 20 ], [ 116, 20 ], [ 116, 20 ], [ 124, 20 ],
    [ 124, 20 ], [ 4, 28 ],   [ 4, 28 ],   [ 12, 28 ],  [ 12, 28 ],
    ... 796 more items
  ],
  anchors: Tensor {
    kept: false,
    isDisposedInternal: false,
    shape: [ 896, 2 ],
    dtype: 'float32',
    size: 1792,
    strides: [ 2 ],
    dataId: {},
    id: 67,
    rankType: '2'
  },
  inputSizeData: [ 128, 128 ],
  inputSize: Tensor {
    kept: false,
    isDisposedInternal: false,
    shape: [ 2 ],
    dtype: 'float32',
    size: 2,
    strides: [],
    dataId: {},
    id: 68,
    rankType: '1'
  },
  iouThreshold: 0.3,
  scoreThreshold: 0.75
}